// 函数定义
fn 1231 please give
   -- the (
		, ccccccccccccccccccccccc
			: color
	      , ccccccccccccccccc
			: color
	) pen
   -- to the boy with 
   -- (c2: color) tshirt ()
-> i32 {
	let pen = color c pen;
	let pen = color c pen;
	let n = 123 123_123 123
}

// fn_head
// "fn head" + 0 1 2 括号
// 0 : 0 ...
fn 1231_123 () {}
fn head tail tail(p: T) {}
// 0 : 1 ...
fn head tail () {}
fn a2123 tail () {}
// 0 : 2 ...
fn head tail (p: T) {}
fn head tail (p: T) tail () {}
fn head tail (p: T) tail (p: T) {}
fn head tail (p: T) tail (p: T) tail () {}
// 1 ...
fn head () {}
//* fn head () tail () {} // 错误示范 */
// 2 : 0 ...
fn head (p: T) tail tail () {}
fn head (p: T) tail tail (p: T) {}
fn head (p: T) tail tail (p: T) tail () {}
fn head (p: T) tail tail (p: T) tail (p: T) {}
// 2 : 1 ...
fn head (p: T) tail () {}
// 2 : 2 ...
fn head (p: T) tail (p: T) {}
fn head (p: T) tail (p: T) tail () {}
fn head (p: T) tail (p: T)  tail (p: T) {}
// -> Type
fn head (p: T) tail () -> T {}
fn head (p: T) tail () -> T {}
fn head (p: T) tail () -> T {} // abcd

// 注释
// abcd
//* abcd */
// abcd //abcd
//* abcd
//* abcd
   fn head (p: T) tail (p: T) {}
// abcd abcd
fn head (p: T) tail (p: T) {}
fn head () {} // abcd */
// 错误示范
// fn head () {} abcd
fn head () {} // abcd */
// abcd

// identifier
fn head (abc: T) {}
fn head (abc def: T) {}
fn head (abc def ghi: T) {}
// 错误
//* fn if head (if p: T) {} */
fn head (_abc p use: T) {}
fn head (在abc p use: T) {}
// 数字
// 错误
//* fn 1111 (abc: T) {} */
//* fn 11_012 head (_abc p use: T) {} */
fn a11head (_abc p use: T) {}
fn a011head a_0123 (_abc p use: T) {}
fn 011 11head 123 (_abc p use: T) {}
fn 003 飞机 (_abc p use: T) {}
fn _113 飞机 (_abc p use: T) {}
fn _ 飞机 (_abc p use: T) {}
fn _ __ (_abc p use: T) {}

// block
fn f() {}
fn f() {
}
fn f() {
	let a = 3;
} // comment
fn f() {
   let a = 3;
}

// 条件语句
fn f() {
   // if_then_else_if_block
   if (3) then { } else if (f) then { }
   if (3) then { } elseif (f) then { }

   if (3) then {
      let n = 3;
   } else if (f) then {
      let n = 3;
   }

   if (3)
   then {
      let myyyyyyyyyyyyyyyyyyyyy
		mame = 3;
   } else if (f)
   then {
      let n = 3;
   }

   // if_then_else_block
   if (1) then {
	   let n = 3 l } else {}

   if (123) then {
   }

   if (f) then {
   }
   if (1) then { } else {}
   if (2) { } else {}
   if {
      ,(1) then {}
      , (2) then {}
      , (3) then {}
   }
   if (f) // comment
// comment
      then { }

}
fn f( 
		,3a: t 
		, 4b: t
		) {
}


// 标准语法
// fn_def
fn def 11f(a: t) 
-- 111aa(4b: t)
-- nameeeeeeeeeeeeeeeeeeee(4b: t)--nameeeeeeeeeeeeeeeeeeee (4b: t)
-- nameeeeeeeeeeeeeeeeeeee (4b: t) nameeeeeeeeeeeeeeeeeeee (a:t)
-> i32 {
      let a: i32 = 8;
}
fn f longlong nameeeeeeeeeeeeeeeeeeee (
      , 3a: t
      , 5c: t
      , 4b: t
) -> i32 {
      let a: i32 = 8;
}

fn f longlong nameeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee (3a: t, 5c: t, 4b: t)
-> i32 {
      let a: i32 = 8;
}
fn f longlong nameeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee ( , 3a: t , 5c: t , 4b: t
                                                    , 6e: t , 7f: t )
-> i32 {
      let a: i32 = 8;
}
fn f longlong nameeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee (
      , 3a: t, 5c: t, 4b: t, 6e: t, 7f: t, 8f: t, 9f: t
) -> i32 {
      let a: i32 = 8;
}



// test
fn __ (
   , _abc p use: T)
-> i32 {
	let n: _1231 = 3;
	// let n = if (x) then {};
	let n = abc;
}// 12333
